{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-routing/auth-routing.module.ts","webpack:///./src/app/auth/auth.component.css","webpack:///./src/app/auth/auth.component.html","webpack:///./src/app/auth/auth.component.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/authGuard/auth.guard.ts","webpack:///./src/app/auth/donor-login/donor-login.component.css","webpack:///./src/app/auth/donor-login/donor-login.component.html","webpack:///./src/app/auth/donor-login/donor-login.component.ts","webpack:///./src/app/auth/donor-signup/donor-signup.component.css","webpack:///./src/app/auth/donor-signup/donor-signup.component.html","webpack:///./src/app/auth/donor-signup/donor-signup.component.ts","webpack:///./src/app/auth/donor-signup/donor.service.ts","webpack:///./src/app/donor-dashboard/donor-dashboard-edit.html","webpack:///./src/app/donor-dashboard/donor-dashboard.component.css","webpack:///./src/app/donor-dashboard/donor-dashboard.component.html","webpack:///./src/app/donor-dashboard/donor-dashboard.component.ts","webpack:///./src/app/donor-dashboard/donor-dashboard.service.ts","webpack:///./src/app/donor-dashboard/donor-profile/donor-profile.component.css","webpack:///./src/app/donor-dashboard/donor-profile/donor-profile.component.html","webpack:///./src/app/donor-dashboard/donor-profile/donor-profile.component.ts","webpack:///./src/app/donor-dashboard/donor-profile/donor-profile.service.ts","webpack:///./src/app/donorAuth/donorAuth.service.ts","webpack:///./src/app/services/donor-state-service.service.ts","webpack:///./src/app/ui/about/about.component.css","webpack:///./src/app/ui/about/about.component.html","webpack:///./src/app/ui/about/about.component.ts","webpack:///./src/app/ui/contact/contact.component.css","webpack:///./src/app/ui/contact/contact.component.html","webpack:///./src/app/ui/contact/contact.component.ts","webpack:///./src/app/ui/footer/footer.component.css","webpack:///./src/app/ui/footer/footer.component.html","webpack:///./src/app/ui/footer/footer.component.ts","webpack:///./src/app/ui/layout/layout.component.css","webpack:///./src/app/ui/layout/layout.component.html","webpack:///./src/app/ui/layout/layout.component.ts","webpack:///./src/app/ui/navbar/navbar.component.css","webpack:///./src/app/ui/navbar/navbar.component.html","webpack:///./src/app/ui/navbar/navbar.component.ts","webpack:///./src/app/user-dashboard/user-dashboard.component.css","webpack:///./src/app/user-dashboard/user-dashboard.component.html","webpack:///./src/app/user-dashboard/user-dashboard.component.ts","webpack:///./src/environments/environment.prod.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Route, RouterModule, Routes } from '@angular/router';\n\nimport { AuthComponent } from './app/auth/auth.component';\nimport { DonorLoginComponent } from './app/auth/donor-login/donor-login.component';\n// import { UserLoginComponent } from './app/auth/user-login/user-login.component';\n// import { UserSignupComponent } from './app/auth/user-signup/user-signup.component';\nimport { DonorSignupComponent } from './app/auth/donor-signup/donor-signup.component';\nimport { AppModule } from './app/app.module';\nimport { AuthRoutingModule } from './app/auth/auth-routing/auth-routing.module';\nimport { DonorDashboardComponent } from './app/donor-dashboard/donor-dashboard.component';\nimport { AboutComponent } from './app/ui/about/about.component';\nimport {ContactComponent} from './app/ui/contact/contact.component';\nimport { DonorProfileComponent } from './app/donor-dashboard/donor-profile/donor-profile.component'\n\n\nconst routes: Routes = [  \n  {path: '', redirectTo: 'donorlogin', pathMatch: 'full'},\n  // {path: 'userlogin', component: UserLoginComponent},\n  {path: 'donorlogin', component: DonorLoginComponent},\n  // {path: 'usersignup', component: UserSignupComponent},\n  {path: 'donorsignup', component: DonorSignupComponent},   \n  {path: 'donordashboard', component: DonorDashboardComponent},\n  {path: 'about', component: AboutComponent},\n  {path: 'contact', component:ContactComponent},\n  // {path: 'userdashboard', component: UserDashboardComponent}, \n  {path: 'profile', component: DonorProfileComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes), AuthRoutingModule ],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<app-layout></app-layout>\\n<router-outlet></router-outlet>\\n\\n\\n\"","import { Component } from '@angular/core';\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = \"Sunshine's Bundles of Joy\";\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { DonorLoginComponent } from './auth/donor-login/donor-login.component';\nimport { DonorSignupComponent } from './auth/donor-signup/donor-signup.component';\n// import { UserLoginComponent } from './auth/user-login/user-login.component';\n// import { UserSignupComponent } from './auth/user-signup/user-signup.component';\nimport { DonorDashboardComponent } from './donor-dashboard/donor-dashboard.component';\nimport { UserDashboardComponent } from './user-dashboard/user-dashboard.component';\nimport { AppRoutingModule } from '../app-routing.module';\nimport { DonorProfileComponent } from './donor-dashboard/donor-profile/donor-profile.component';\n// import { UserProfileComponent } from './user-dashboard/user-profile/user-profile.component';\nimport { NavbarComponent } from './ui/navbar/navbar.component';\nimport { FooterComponent } from './ui/footer/footer.component';\nimport { LayoutComponent } from './ui/layout/layout.component';\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { ReactiveFormsModule, FormsModule, FormControlName } from '@angular/forms';\nimport { \n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatButtonToggleModule,\n  MatDialogModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatMenuModule,\n  MatPaginatorModule,\n  MatRadioModule,\n  MatSidenavModule,\n  MatSlideToggleModule,\n  MatTableModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatSnackBarModule, \n  MatListModule, \n  MatOptionModule,\n  MatSelectModule,\n} from \"@angular/material\";\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthService } from './auth/auth.service';\nimport { DonorAuthService } from './donorAuth/donorAuth.service'\nimport { DonorService } from './auth/donor-signup/donor.service'\nimport {AboutComponent} from './ui/about/about.component';\nimport {ContactComponent} from './ui/contact/contact.component';\nimport { DialogDataExampleDialog } from './donor-dashboard/donor-dashboard.component'\nimport { AuthGuard } from './auth/authGuard/auth.guard';\n// import { UserService } from './auth/user-signup/user.service';\nimport { DonorProfileService } from './donor-dashboard/donor-profile/donor-profile.service';\nimport { DonorDashboardService } from './donor-dashboard/donor-dashboard.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthComponent,\n    DonorLoginComponent,\n    DonorSignupComponent,\n    // UserLoginComponent,\n    // UserSignupComponent,\n    DonorDashboardComponent,\n    UserDashboardComponent,\n    DonorProfileComponent,\n    // UserProfileComponent,\n    NavbarComponent,\n    FooterComponent,\n    LayoutComponent,\n    AboutComponent,\n    ContactComponent,\n    DialogDataExampleDialog,\n    ContactComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatButtonToggleModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatRadioModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatListModule,\n    MatOptionModule,\n    MatSelectModule,\n    HttpClientModule\n  ],\n  exports: [\n    FormsModule,\n    BrowserModule, \n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n\n  ],\n  providers: [AuthService, DonorAuthService, DonorService, \n    AuthGuard, DonorProfileService, DonorDashboardService, DonorAuthService ],\n  bootstrap: [AppComponent],\n  entryComponents: [ DialogDataExampleDialog ]\n\n})\nexport class AppModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n// import { UserLoginComponent } from '../user-login/user-login.component';\n// import { UserSignupComponent } from '../user-signup/user-signup.component';\nimport { DonorLoginComponent } from '../donor-login/donor-login.component';\nimport { DonorSignupComponent } from '../donor-signup/donor-signup.component'\n\n\nconst routes: Routes = [\n  // { path: 'userlogin', component: UserLoginComponent},\n  // { path: 'usersignup', component: UserSignupComponent},\n  { path: 'donorsignup', component: DonorSignupComponent},\n  { path: 'donorlogin', component: DonorLoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  declarations: [],\n  exports: [RouterModule]\n})\n\nexport class AuthRoutingModule { }\n","module.exports = \"\"","module.exports = \"<app-donor-login></app-donor-login>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth.service'\n\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n\n  ngOnInit() {\n    \n  }\n  onSubmit() {\n    \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError,  tap } from 'rxjs/operators';\n// import { UserSignupComponent } from './user-signup/user-signup.component'\n// import { HttpErrorHandler, HandleError } from '../http-error-handler.service';\nimport { UserSignup } from './user-signup/user-signup'\nimport { map } from 'rxjs/operators';\n// import {UserLoginComponent} from './user-login/user-login.component';\n\n@Injectable()\nexport class AuthService {\n    constructor(private http: HttpClient) { }\n\n    url = 'http://localhost:3000';\n\n    login(donor_username: string, donor_password: string) {\n        return this.http.post<any>(`${this.url}/donor/login`, {donor_username: donor_username, donor_password: donor_password })\n        .subscribe((res) => {\n            localStorage.setItem(\"token\", res.sessionToken)\n        },\n            err => console.log(err)\n        );\n    }\n    logout() {\n        // remove user from local storage to log user out\n        localStorage.removeItem('currentUser');\n    }\n}\n\n// const httpOptions = {\n//   headers: new HttpHeaders({ \n//     'Content-Type': 'application/json',\n//     'Authorization': 'my-auth-token'\n  \n//   })\n// };\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class AuthService {\n  // private authUrl = 'https://localhost3000/user/api/createuser';\n  // authUrl = 'https://localhost3000/user/api/createuser'\n  // private  handleError: HandleError;\n\n  // constructor(\n  //   private http: HttpClient,\n    //  httpErrorHandler: HttpErrorHandler \n  // ) {\n    //   thishandleError = httpErrorHandler.createHandleError('AuthService');\n    // }\n  // userSignUp(userSignUp: any[]) {\n  //   return this.http.post('http://localhost3000/user/api/createuser', userSignUp)\n  // }\n  // addHero (hero: Hero): Observable<Hero> {\n  //   return this.http.post<Hero>(this.heroesUrl, hero, httpOptions)\n  //     .pipe(\n  //       catchError(this.handleError('addHero', hero))\n  //     );\n  // }\n  /** GET heroes from the server */\n  // getHeroes (): Observable<UserSignup[]> {\n  //   return this.http.get<UserSignup[]>(this.authUrl)\n  //     .pipe(\n  //       catchError(this.handleError('getAuth', []))\n  //     );\n  // }\n\n \n\n  /** POST: add a new hero to the database */\n  // addUser (userSignUp: UserSignup): Observable<UserSignup> {\n  //   return this.http.post<UserSignup>(this.authUrl, userSignUp, httpOptions)\n  //     .pipe(\n  //       catchError(this.handleError('addUser', userSignUp))\n  //     );\n  // }\n\n  /** DELETE: delete the hero from the server */\n  // deleteHero (id: number): Observable<{}> {\n  //   const url = `${this.heroesUrl}/${id}`; // DELETE api/heroes/42\n  //   return this.http.delete(url, httpOptions)\n  //     .pipe(\n  //       catchError(this.handleError('deleteHero'))\n  //     );\n  // }\n\n  /** PUT: update the hero on the server. Returns the updated hero upon success. */\n//   updateHero (hero: Hero): Observable<Hero> {\n//     httpOptions.headers =\n//       httpOptions.headers.set('Authorization', 'my-new-auth-token');\n\n//     return this.http.put<Hero>(this.heroesUrl, hero, httpOptions)\n//       .pipe(\n//         catchError(this.handleError('updateHero', hero))\n//       );\n//   }\n// }\n\n\n    \n//  } \n ","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, RouterLink } from '@angular/router';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if (localStorage.getItem('currentUser')) {\n            // logged in so return true\n            return true;\n        }\n                    \n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/donorlogin'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n}","module.exports = \"  .donorCard{\\n    height: 50%;\\n    width: 30%;\\n    margin-left: auto;\\n    margin-right: auto;\\n    margin-top: 5%;\\n    background-color: #7cd9d9;\\n    border-radius: 50px;\\n    text-align: center;\\n}  \\n.donorButtons{\\n    margin-bottom: 5%;\\n    display: inline-block;\\n    width: 100%;\\n    text-align-last: right;\\n}  \\n.loginBtn {\\n    color: black;\\n    background-color: #ff8cff;\\n}  \\n.userBtn {\\n    color: black;\\n    background-color: #ff8cff;\\n}  \\nbutton:hover {\\n    color: black;\\n    background-color: white;\\n    border: 1px solid #ff8cff;\\n}  \\n.donorButtons .submit {\\n    float: left;\\n}  \\n.noaccount a {\\n    text-decoration: none;\\n    color: #191919;\\n}  \\n.noaccount a:hover {\\n    text-decoration: underline;\\n}  \\n/* @font-face {\\n    font-family: 'Pacifico';\\n    font-style: normal;\\n    font-weight: normal;\\n    src: local('Pacifico'), url('http://themes.googleusercontent.com/font?kit=fKnfV28XkldRW297cFLeqfesZW2xOQ-xsNqO47m55DA') format('truetype');\\n }\\n .donorCard{\\n    height: 50%;\\n    width: 30%;\\n    margin-left: auto;\\n    margin-right: auto;\\n    margin-top: 5%;\\n    background-color: #7cd9d9;\\n    border-radius: 50px;\\n    text-align: center;\\n} \\n body {\\n    text-align: center;\\n }\\n \\n .donorButtons {\\n    display: inline-block;\\n    margin-top: 20%;\\n    -webkit-border-radius: 8px;\\n    -moz-border-radius: 8px;\\n    border-radius: 8px;\\n    -webkit-box-shadow:    0 8px 0 #c5376d, 0 15px 20px rgba(0, 0, 0, .35);\\n    -moz-box-shadow: 0 8px 0 #c5376d, 0 15px 20px rgba(0, 0, 0, .35);\\n    box-shadow: 0 8px 0 #c5376d, 0 15px 20px rgba(0, 0, 0, .35);\\n    -webkit-transition: -webkit-box-shadow .1s ease-in-out;\\n    -moz-transition: -moz-box-shadow .1s ease-in-out;\\n    -o-transition: -o-box-shadow .1s ease-in-out;\\n    transition: box-shadow .1s ease-in-out;\\n    font-size: 50px;\\n    color: #fff;\\n }\\n \\n .donorButtons  span {\\n    display: inline-block;\\n    padding: 20px 30px;\\n    background-color: #ec528d;\\n    background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(hsla(338, 90%, 80%, .8)), to(hsla(338, 90%, 70%, .2)));\\n    background-image: -webkit-linear-gradient(hsla(338, 90%, 80%, .8), hsla(338, 90%, 70%, .2));\\n    background-image: -moz-linear-gradient(hsla(338, 90%, 80%, .8), hsla(338, 90%, 70%, .2));\\n    background-image: -o-linear-gradient(hsla(338, 90%, 80%, .8), hsla(338, 90%, 70%, .2));\\n    -webkit-border-radius: 8px;\\n    -moz-border-radius: 8px;\\n    border-radius: 8px;\\n    -webkit-box-shadow: inset 0 -1px 1px rgba(255, 255, 255, .15);\\n    -moz-box-shadow: inset 0 -1px 1px rgba(255, 255, 255, .15);\\n    box-shadow: inset 0 -1px 1px rgba(255, 255, 255, .15);\\n    font-family: 'Pacifico', Arial, sans-serif;\\n    line-height: 1;\\n    text-shadow: 0 -1px 1px rgba(175, 49, 95, .7);\\n    -webkit-transition: background-color .2s ease-in-out, -webkit-transform .1s ease-in-out;\\n    -moz-transition: background-color .2s ease-in-out, -moz-transform .1s ease-in-out;\\n    -o-transition: background-color .2s ease-in-out, -o-transform .1s ease-in-out;\\n    transition: background-color .2s ease-in-out, transform .1s ease-in-out;\\n }\\n \\n .donorButtons :hover span {\\n    background-color: #ec6a9c;\\n    text-shadow: 0 -1px 1px rgba(175, 49, 95, .9), 0 0 5px rgba(255, 255, 255, .8);\\n }\\n \\n .donorButtons :active, #button:focus {\\n    -webkit-box-shadow:    0 8px 0 #c5376d, 0 12px 10px rgba(0, 0, 0, .3);\\n    -moz-box-shadow: 0 8px 0 #c5376d, 0 12px 10px rgba(0, 0, 0, .3);\\n    box-shadow:    0 8px 0 #c5376d, 0 12px 10px rgba(0, 0, 0, .3);\\n }\\n \\n .donorButtons :active span {\\n    -webkit-transform: translate(0, 4px);\\n    -moz-transform: translate(0, 4px);\\n    -o-transform: translate(0, 4px);\\n    transform: translate(0, 4px);\\n } */\"","module.exports = \"<mat-card class=\\\"donorCard\\\">\\n    <h2>Donor Login</h2>\\n    <hr color=\\\"#ff8cff\\\" />\\n    <form [formGroup]=\\\"donorForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <div class=\\\"form-group\\\">\\n          <mat-form-field>\\n            <input matInput type=\\\"text\\\"\\n            placeholder=\\\"Username\\\" \\n            formControlName=\\\"donor_username\\\" class=\\\"form-control\\\"/>\\n          \\n          </mat-form-field>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <mat-form-field>\\n            <input matInput type=\\\"password\\\" \\n            placeholder=\\\"Password\\\"\\n            formControlName=\\\"donor_password\\\" class=\\\"form-control\\\"/>\\n          \\n            </mat-form-field>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <button mat-raised-button [disabled]=\\\"loading\\\" class=\\\"loginBtn\\\">Login</button>\\n            <!-- <button mat-raised-button class=\\\"userBtn\\\" routerLink='/userlogin'>I'm a User</button> -->\\n        </div>\\n        <div class=\\\"noaccount\\\">\\n            <a routerLink=\\\"/donorsignup\\\">Don't have an account?</a>\\n        </div>\\n    </form>\\n  </mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { DonorAuthService } from '../../donorAuth/donorAuth.service';\nimport { AuthGuard } from '../authGuard/auth.guard';\nimport { DonorStateServiceService } from '../../services/donor-state-service.service';\n\n\n\n@Component({\n  selector: 'app-donor-login',\n  templateUrl: './donor-login.component.html',\n  styleUrls: ['./donor-login.component.css']\n})\nexport class DonorLoginComponent implements OnInit {\n\n  donorForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private route: ActivatedRoute,\n      private router: Router,\n      private donorAuthService: DonorAuthService,\n      public donorStateService: DonorStateServiceService\n    ) {}\n\n  ngOnInit() {\n      this.donorForm = this.formBuilder.group({\n          donor_username: ['', Validators.required],\n          donor_password: ['', Validators.required]\n      });\n\n      // reset login status\n      this.donorAuthService.logout();\n\n      // get return url from route parameters or default to '/'\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/donordashboard';\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.donorForm.controls; }\n\n  onSubmit() {\n      this.submitted = true;\n\n      // stop here if form is invalid\n      if (this.donorForm.invalid) {\n          return;\n      }\n\n      this.loading = true;\n      this.donorAuthService.login(this.f.donor_username.value, this.f.donor_password.value)\n        //   .pipe(first())\n          .subscribe(\n              data => {\n                this.donorStateService.donor = data.donor;\n                localStorage.setItem(\"token\", data.sessionToken)\n                  this.router.navigate([this.returnUrl]);\n              },\n              error => {\n                  // this.alertService.error(error);\n                  this.loading = false;\n              });\n  }\n  }\n  \n","module.exports = \".cardForSignup{\\n    height: 50%;\\n    width: 30%;\\n    margin-left: auto;\\n    margin-right: auto;\\n    margin-top: 5%;\\n    background-color: #7cd9d9;\\n    border-radius: 50px;\\n    text-align: center;\\n}\\n.cardForSignup a {\\n    text-decoration: none;\\n    color: black;\\n}\\n.cardForSignup a:hover {\\n    text-decoration: underline;\\n}\\nbutton{\\n    background-color: #ff8cff;\\n    color: black;\\n}\\nbutton:hover{\\n    color: black;\\n    background-color: white;\\n    border: 1px solid #ff8cff;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <mat-card class=\\\"cardForSignup\\\">\\n      <h2>Donor Signup</h2>\\n      <form [formGroup]=\\\"registerForm\\\">\\n      <hr color=\\\"#ff8cff\\\" />\\n      <div class=\\\"registerForm\\\">\\n          <mat-form-field>\\n          <input matInput placeholder=\\\"First Name\\\"  type=\\\"text\\\" formControlName=\\\"donor_fname\\\" class=\\\"registerForm\\\" />\\n        </mat-form-field>\\n      </div>\\n      <!-- last name -->\\n      <div class=\\\"registerForm\\\">\\n          <mat-form-field>\\n          <input matInput placeholder=\\\"Last Name\\\" type=\\\"text\\\" formControlName=\\\"donor_lname\\\" class=\\\"registerForm\\\" />\\n        </mat-form-field>\\n      </div>\\n      <!-- address -->\\n      <div class=\\\"registerForm\\\">\\n      <mat-form-field class=\\\"donor-signup-component\\\">\\n        <input matInput placeholder=\\\"Username\\\" type=\\\"text\\\" formControlName=\\\"donor_username\\\" class=\\\"registerForm\\\"  >\\n      </mat-form-field>\\n      </div>\\n\\n      <div class=\\\"registerForm\\\">\\n        <mat-form-field class=\\\"donor-signup-component\\\">\\n          <input matInput placeholder=\\\"Email\\\" formControlName=\\\"donor_email\\\" class=\\\"registerForm\\\"  />\\n        </mat-form-field>\\n      </div>\\n    \\n      <div class=\\\"registerForm\\\">\\n        <mat-form-field class=\\\"donor-signup-component\\\">\\n          <input matInput placeholder=\\\"Password\\\" formControlName=\\\"donor_password\\\" class=\\\"registerForm\\\" />\\n        </mat-form-field>\\n      </div>  \\n      <div class=\\\"registerForm\\\"> \\n      <mat-form-field class=\\\"donor-signup-component\\\">\\n        <input matInput placeholder=\\\"Address\\\" type=\\\"text\\\" formControlName=\\\"donor_address\\\" class=\\\"registerForm\\\">\\n        <!-- <mat-error *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n            <mat-error *ngIf=\\\"f.username.errors.required\\\">Username is required</mat-error>\\n        </mat-error> -->\\n      </mat-form-field>\\n</div>\\n<!-- city -->\\n<div class=\\\"registerForm\\\">\\n<mat-form-field class=\\\"donor-signup-component\\\">\\n  <input matInput placeholder=\\\"City\\\" type=\\\"text\\\" formControlName=\\\"donor_city\\\" class=\\\"registerForm\\\">\\n  <!-- <mat-error *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n            <mat-error *ngIf=\\\"f.username.errors.required\\\">Username is required</mat-error>\\n        </mat-error> -->\\n</mat-form-field>\\n</div>\\n<!-- state -->\\n<div class=\\\"registerForm\\\">\\n<mat-form-field class=\\\"donor-signup-component\\\">\\n  <input matInput placeholder=\\\"State\\\" type=\\\"text\\\" formControlName=\\\"donor_state\\\" class=\\\"registerForm\\\">\\n  <!-- <mat-error *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n            <mat-error *ngIf=\\\"f.username.errors.required\\\">Username is required</mat-error>\\n        </mat-error> -->\\n</mat-form-field>\\n</div>\\n<!-- zip code -->\\n<div class=\\\"registerForm\\\">\\n<mat-form-field class=\\\"donor-signup-component\\\">\\n  <input matInput placeholder=\\\"Zip Code\\\" type=\\\"text\\\" formControlName=\\\"donor_zipCode\\\" class=\\\"registerForm\\\">\\n  <!-- <mat-error *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n            <mat-error *ngIf=\\\"f.username.errors.required\\\">Username is required</mat-error>\\n        </mat-error> -->\\n</mat-form-field>\\n</div>\\n<!-- phone numbeer -->\\n<div class=\\\"registerForm\\\">\\n<mat-form-field class=\\\"donor-signup-component\\\">\\n  <input matInput placeholder=\\\"Phone Number\\\" type=\\\"tel\\\" formControlName=\\\"donor_phoneNumber\\\" class=\\\"registerForm\\\">\\n  <!-- <mat-error *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n            <mat-error *ngIf=\\\"f.username.errors.required\\\">Username is required</mat-error>\\n        </mat-error> -->\\n</mat-form-field>\\n</div>\\n<!-- username -->\\n<div class=\\\"registerForm\\\">\\n  <mat-form-field class=\\\"donor-signup-component\\\">\\n    <input matInput placeholder=\\\"Username\\\" type=\\\"text\\\" formControlName=\\\"donor_username\\\" class=\\\"registerForm\\\">\\n    <!-- <mat-error *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n            <mat-error *ngIf=\\\"f.username.errors.required\\\">Username is required</mat-error>\\n        </mat-error> -->\\n  </mat-form-field>\\n</div>\\n<!-- email -->\\n<div class=\\\"registerForm\\\">\\n  <mat-form-field class=\\\"donor-signup-component\\\">\\n    <input matInput placeholder=\\\"Email\\\" formControlName=\\\"donor_email\\\" class=\\\"registerForm\\\" />\\n    <!-- <mat-error *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n              <mat-error *ngIf=\\\"f.email.errors.required\\\">Email is required</mat-error>\\n          </mat-error> -->\\n  </mat-form-field>\\n</div>\\n<!-- password -->\\n<div class=\\\"registerForm\\\">\\n  <mat-form-field class=\\\"donor-signup-component\\\">\\n    <input matInput placeholder=\\\"Password\\\" formControlName=\\\"donor_password\\\" class=\\\"registerForm\\\" />\\n    <!-- <mat-error *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n              <mat-error *ngIf=\\\"f.password.errors.required\\\">Password is required</mat-error>\\n              <mat-error *ngIf=\\\"f.password.errors.minlength\\\">Password must be at least 6 characters</mat-error>\\n          </mat-error> -->\\n  </mat-form-field>\\n</div>\\n\\n<!-- <div>\\n        <mat-form-field class=\\\"donor-signup-component\\\">\\n          <input matInput placeholder=\\\"Confirm Password\\\" formControlName=\\\"Password\\\" required>\\n        </mat-form-field>\\n      </div>  -->\\n    </form>\\n    \\n    <div class=\\\"matButton-signup-card-signup\\\">\\n      <button mat-raised-button [disabled]=\\\"loading\\\" class=\\\"submit\\\" (click)=onSubmit()>Signup</button>\\n      <!-- <button mat-raised-button class=\\\"student\\\" routerLink=\\\"/usersignup\\\">I'm a User</button> -->\\n   </div>\\n    <a routerLink=\\\"/donorlogin\\\">Already have an account?</a>\\n  </mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { DonorService } from './donor.service'\n\n\n@Component({\n  selector: 'app-donor-signup',\n  templateUrl: './donor-signup.component.html',\n  styleUrls: ['./donor-signup.component.css']\n})\nexport class DonorSignupComponent implements OnInit {\n  registerForm: FormGroup;\n    loading = false;\n    submitted = false;\n\n  constructor(private formBuilder: FormBuilder, private router: Router,\n    private donorService: DonorService,) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      donor_fname: ['', Validators.required],\n      donor_email: ['', Validators.required],\n      donor_lname: ['', Validators.required],\n      donor_username: ['', Validators.required],\n      donor_password: ['', [Validators.required, Validators.minLength(6)]],\n      donor_address: ['', Validators.required],\n      donor_city: ['', Validators.required],\n      donor_state: ['', Validators.required],\n      donor_zipCode: ['', Validators.required],\n      donor_phoneNumber: ['', Validators.required],\n\n    });\n  }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.registerForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.registerForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.donorService.register(this.registerForm.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    // this.alertService.success('Registration successful', true);\n                    console.log(data);\n                    this.router.navigate(['/donorlogin']);\n                },\n                error => {\n                    // this.alertService.error(error);\n                    this.loading = false;\n                });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Donor } from './donor';\nimport { APIURL } from '../../../environments/environment.prod'\n\n@Injectable({\n   providedIn: 'root'\n})\nexport class DonorService {\n    url = 'http://localhost:3000'\n\n\n  constructor(private http: HttpClient ) { }\n  getAll() {\n    return this.http.get<Donor[]>(`/donors`);\n}\n\ngetById(id: number) {\n    return this.http.get(`/donor/` + id);\n}\n\nregister(donor: Donor) {\n    return this.http.post(`${APIURL}/donor/createdonor`, donor);\n}\n\nupdate(donor: Donor) {\n    return this.http.put(`/donor/` + donor.id, donor);\n}\n\ndelete(id: number) {\n    return this.http.delete(`/donor/` + id);\n}\n}\n","module.exports = \"<h1 mat-dialog-title>Favorite Animal</h1>\\n<div mat-dialog-content>\\n  My favorite animal is:\\n  <ul>\\n    <li>\\n      <span *ngIf=\\\"data.animal === 'panda'\\\">&#10003;</span> Panda\\n    </li>\\n    <li>\\n      <span *ngIf=\\\"data.animal === 'unicorn'\\\">&#10003;</span> Unicorn\\n    </li>\\n    <li>\\n      <span *ngIf=\\\"data.animal === 'lion'\\\">&#10003;</span> Lion\\n    </li>\\n  </ul>\\n</div>\\n\"","module.exports = \".sidenav-container {\\n    height: 81%;\\n    margin-top: 4em;\\n  }\\n  \\n  .sidenav {\\n    /* width: 200px; */\\n    width: 37%;\\n  }\\n  \\n  .mat-toolbar.mat-primary {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    top: 5em;\\n  }\\n  \\n  table {\\n    width: 30%;\\n    height: 50%;\\n    margin-top: 5em; \\n    margin-left: 22em;\\n  }\\n  \\n  #sideNavForm{\\n    margin-top: 5em;\\n    margin-left: 8em;\\n  }\\n  \\n  #sideNavAmount{\\n    margin-top: 5em;\\n    margin-left: 8em;\\n  }\\n  \\n  #listButton{\\n    margin-top: 4em;\\n    margin-left: 12em;\\n    background-color: #ec528d;\\n    color: white;\\n  }\\n  \\n  #navTitle{\\n    margin-top: 2em;\\n    margin-left: 5.5em;\\n  }\\n  \\n  #tableTitle{\\n    margin-top: 2em;\\n    margin-left: 16em;\\n  }\\n  \\n  #tableUpdateButton{\\n    margin-top: 2em;\\n    margin-left: 25em;\\n    background-color: #ec528d;\\n    color: white;\\n  }\\n  \\n  #tableDeleteButton{\\n    margin-top: 2em;\\n    margin-left: 1em;\\n    background-color: #ec528d;\\n    color: white;\\n  }  \"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport=\\\"true\\\"\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n    [opened]=\\\"!(isHandset$ | async)\\\"\\n    [fixedInViewport]=\\\"options.value.fixed\\\" \\n    [fixedTopGap]=\\\"options.value.top\\\"\\n    [fixedBottomGap]=\\\"options.value.bottom\\\">\\n    <h2 id=\\\"navTitle\\\">Add Donations</h2>\\n    <form id=\\\"sideNavForm\\\" [formGroup]=\\\"addForm\\\" >\\n        <mat-form-field>\\n          <mat-select placeholder=\\\"Donation Options\\\" [(ngModel)]=\\\"selectedValue\\\" name=\\\"donations\\\" formControlName=\\\"item\\\">\\n            <mat-option *ngFor=\\\"let donation of donations\\\" [value]=\\\"donation.value\\\" >\\n              {{donation.viewValue}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      \\n      </form>\\n      <form id=\\\"sideNavAmount\\\" [formGroup]=\\\"addForm\\\">\\n          <mat-form-field class=\\\"donation-amount\\\">\\n            <input matInput placeholder=\\\"Donation Amount\\\" name=\\\"amount\\\" (value)= \\\"amount\\\" formControlName=\\\"amount\\\">\\n          </mat-form-field>\\n        </form>\\n      <button mat-raised-button class=\\\"submit\\\" (click)=onSubmit() id=\\\"listButton\\\">Add to List</button>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n      <h2 id=\\\"tableTitle\\\">My Donations</h2>\\n      <button mat-raised-button class=\\\"submit\\\" [routerLink]=\\\"['/profile']\\\" id=\\\"profileButton\\\">Donor Profile</button>\\n    <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\" id=\\\"donationTable\\\" > \\n  \\n        <ng-container matColumnDef=\\\"amount\\\">\\n          <th mat-header-cell *matHeaderCellDef>Amount</th>\\n          <td mat-cell *matCellDef=\\\"let donation\\\"> {{ donation.amount }}</td>\\n        </ng-container>\\n      \\n        <ng-container matColumnDef=\\\"items\\\">\\n          <th mat-header-cell *matHeaderCellDef>Items</th>\\n          <td mat-cell *matCellDef=\\\"let donation\\\"> {{ donation.item }}</td>\\n        </ng-container>\\n          \\n      <ng-container matColumnDef=\\\"select\\\">\\n          <th mat-header-cell *matHeaderCellDef></th>\\n          <mat-checkbox></mat-checkbox>\\n          <td mat-cell *matCellDef=\\\"let row\\\">\\n            <mat-checkbox (click)=\\\"$event.stopPropagation()\\\" (change)=\\\"$event ? selection.toggle(row) : null\\\">\\n            </mat-checkbox>\\n          </td>\\n        </ng-container>  \\n      \\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        </table>\\n        <button mat-raised-button (click)=\\\"openDialog()\\\" id=\\\"tableUpdateButton\\\">Edit Item</button>\\n        <button mat-raised-button class=\\\"submit\\\" id=\\\"tableDeleteButton\\\">Delete Item</button>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n      \"","import { Component, OnInit, Inject, Injector, Injectable } from \"@angular/core\";\nimport {\n  BreakpointObserver,\n  Breakpoints,\n  BreakpointState\n} from \"@angular/cdk/layout\";\nimport { Observable } from \"rxjs\";\nimport { map, subscribeOn } from \"rxjs/operators\";\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { Donor } from \"./donor\";\nimport { DonorDashboardService } from \"./donor-dashboard.service\";\nimport { MatDialog, MAT_DIALOG_DATA } from \"@angular/material\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\nimport { DonorStateServiceService } from \"../services/donor-state-service.service\";\nexport interface DonationList {\n  amount: number;\n  items: string;\n}\nexport interface Donation {\n  value: string;\n  viewValue: string;\n}\nexport interface DialogData {\n  animal: \"panda\" | \"unicorn\" | \"lion\";\n}\nconst DONATION_DATA: DonationList[] = [\n  // {amount: 20, items: 'Bottles',},\n  // { amount: 5, items: 'Diaperbags'},\n  // { amount: 10, items: 'Blankets'}\n];\n\n\n@Component({\n  selector: \"app-donor-dashboard\",\n  templateUrl: \"./donor-dashboard.component.html\",\n  styleUrls: [\"./donor-dashboard.component.css\"]\n})\nexport class DonorDashboardComponent implements OnInit {\n  addForm: FormGroup;\n  loading = false;\n  submitted = false;\n\n  donor: Donor;\n  // editDonor: Donor; // the hero currently being edited\n\n  displayedColumns: string[] = [\"select\", \"amount\", \"items\"];\n  dataSource = DONATION_DATA;\n  options: FormGroup;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map(result => result.matches));\n  selectedValue: string;\n\n  donations: Donation[] = [\n    { value: \"used_clothes\", viewValue: \"Clothes\" },\n    { value: \"used_shoes\", viewValue: \"Shoes\" },\n    { value: \"baby_food\", viewValue: \"Baby Food\" },\n    { value: \"diaper_bags\", viewValue: \"Diaper Bags\" },\n    { value: \"bottles\", viewValue: \"Bottles\" },\n    { value: \"pacifiers\", viewValue: \"Pacifiers\" },\n    { value: \"diaper_boxes\", viewValue: \"Boxes of Diapers\" },\n    { value: \"beds\", viewValue: \"Beds\" },\n    { value: \"misc_item\", viewValue: \"MISC\" }\n  ];\n\n  //setting donations to empty arry\n  userDonations: DonationList[] = [];\n  \n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private formBuilder: FormBuilder,\n    private donordashboardService: DonorDashboardService,\n    public donorStateService: DonorStateServiceService,\n    public dialog: MatDialog,\n    private router: Router\n  ) {\n    this.options = formBuilder.group({\n      bottom: 0,\n      fixed: false,\n      top: 65\n    });\n  }\n\n  ngOnInit() {\n    console.log(this.donorStateService);\n\n    this.donordashboardService.getDonations()\n    .subscribe(data =>{\n      console.log(data)\n      // this.userDonations = []\n    })\n    \n      // this.donordashboardService.getDonationById(this.donorStateService.donor.id)\n      // .subscribe( data => {\n      //   console.log(data);\n      //   // this.donor = data\n      // })\n    \n\n    //      this.addForm = this.formBuilder.group({\n    //       id: [],\n    //        item: [''],\n    //       amount: []\n    //     .subscribe( data => {\n    //       // this.donor = this.donor.filter(d => d !== donors);\n    //     })\n    // });\n    this.addForm = this.formBuilder.group({\n      id: [],\n      item: [\"\"],\n      amount: []\n    });\n  \n      //     .subscribe( data => {\n      //       // this.donor = this.donor.filter(d => d !== donors);\n    // editDonation(donors: Donor): void {\n    //   localStorage.removeItem(\"editDonorId\");\n    //   localStorage.setItem(\"editDonorId\", donors.id.toString());\n    //   // this.router.navigate(['edit-donor']);\n    // };\n    // addDonation(): void {\n    //   this.donordashboardService.createDonation(this.addForm.value)\n    //   .subscribe( data => {\n\n    //   })\n    // }\n    console.log(this.addForm);\n  }\n      \n  // convenience getter for easy access to form fields\n  // get f() { return this.addForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    console.log(this.addForm.value);\n    const donation = {\n      used_shoes: parseInt(this.addForm.value.amount)\n    }\n    // stop here if form is invalid\n    if (this.addForm.invalid) {\n      return;\n    }\n\n    \n\n    this.loading = true;\n    console.log(\"test\");\n    this.donordashboardService\n      .createDonation(donation)\n      // this.donordashboardService.createDonation(this.addForm.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          // this.alertService.success('Registration successful', true);\n          console.log(data);\n          this.router.navigate([\"/donordashboard\"]);\n        },\n        error => {\n          // this.alertService.error(error);\n          this.loading = false;\n        }\n        \n      );\n      this.donordashboardService.getDonationById(this.donor.id)\n    .subscribe( data => {\n      this.donor = data\n    })\n  }\n}\n@Component({\n  selector: \"dialog-data-example-dialog\",\n  templateUrl: \"donor-dashboard-edit.html\"\n})\nexport class DialogDataExampleDialog {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Donor } from './donor';\nimport { HttpErrorHandler, HandleError } from '../http-error-handler.service';\nimport { DonorDashboardComponent, Donation } from './donor-dashboard.component';\nimport {APIURL} from '../../environments/environment.prod';\n\n// import { HttpModule } from '@angular/http'\n\n\n@Injectable()\nexport class DonorDashboardService { \n\n  constructor(private http: HttpClient) {}\n  // donorUrl = 'http://localhost:3000/donation/createdonation';  // URL to web api\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': 'currentUser'\n    })\n  };\n  getDonations() {\n    return this.http.get<Donor>(`${APIURL}/donation/`);\n  }\n  getDonationById(id: number) {\n    return this.http.get<Donor>(`${APIURL}/donation/${id}`, this.httpOptions)  ;\n  }\n  // createDonation(donor: Donor[]) {\n  //   return this.http.post(this.donorUrl + '/createdonation' ,donor);\n  // }\n  // createDonation (donor: Donor): Observable<any> {\n  //       return this.http.post<Donor>(this.donorUrl, donor, this.httpOptions)\n  //         // .pipe( \n  //         //   // tap((donor:Donor) => this.log(`added donor w/ id=${donor.id}`)),\n  //         //   catchError(this.handleError<Donor>('createDonation'))\n  //         // );\n  //     }\n  createDonation (donation: Donor): Observable<Donation> {\n    return this.http.post<Donation>(`{APIURL}/donation/createdonation`,donation, this.httpOptions)\n      // .pipe(\n      //   catchError(this.handleError('createDonation', donation))\n      // );\n  }\n  updateDonation(donation: Donor): Observable<Donation> {\n    return this.http.put<Donation>(`{APIURL}/donation/updatedonation`, donation.id , this.httpOptions)\n  }\n  deleteDonation(donation: Donor):  Observable<Donation> {\n    return this.http.delete<Donation>(`{APIURL}/donation/deletedonation`, this.httpOptions);\n  }\n\n//   /** GET heroes from the server */\n//   getDonations (): Observable<Donor[]> {\n//     return this.http.get<Donor[]>(this.donorUrl)\n//       .pipe(\n//         catchError(this.handleError('getDonations', []))\n//       );\n//   }\n// //////// Save methods //////////\n\n//   /** POST: add a new hero to the database */\n//   addDonation (donor: Donor): Observable<Donor> {\n//     return this.http.post<Donor>(this.donorUrl, donor, httpOptions)\n//       .pipe(\n//         catchError(this.handleError('addDonation', donor))\n//       );\n//   }\n\n//   /** DELETE: delete the hero from the server */\n//   deleteDonation (id: number): Observable<{}> {\n//     const url = `${this.donorUrl}/${id}`; // DELETE api/heroes/42\n//     return this.http.delete(url, httpOptions)\n//       .pipe(\n//         catchError(this.handleError('deleteDonation'))\n//       );\n//   }\n\n//   /** PUT: update the hero on the server. Returns the updated hero upon success. */\n//   updateDonation (donor: Donor): Observable<Donor> {\n//     httpOptions.headers =\n//       httpOptions.headers.set('Authorization', 'my-new-auth-token');\n\n//     return this.http.put<Donor>(this.donorUrl, donor, httpOptions)\n//       .pipe(\n//         catchError(this.handleError('updateDonation', donor))\n//       );\n//       }\n }\n      \n\n\n  \n  \n\n  ","module.exports = \".cardForProfile{\\n    height: 50%;\\n    width: 30%;\\n    margin-left: auto;\\n    margin-right: auto;\\n    margin-bottom: 8em;\\n    margin-top: 5%;\\n    background-color: #7cd9d9;\\n    border-radius: 50px;\\n    text-align: center;\\n}\\n\\n.cardForProfile a {\\n    text-decoration: none;\\n    color: #D9514E;\\n}\\n\\n.cardForProfile a:hover {\\n    text-decoration: underline;\\n}\\n\\nbutton{\\n    float: right;\\n    margin: 1%;\\n    background-color: #ff8cff;\\n}\\n\\nbutton:hover{\\n    color: black;\\n    background-color: white;\\n    border: 1px solid #ff8cff;\\n\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div> *ngIf='profileForm'>\\n    <mat-card class=\\\"cardForProfile\\\">\\n        <form [formGroup]=\\\"profileForm\\\">\\n            <h1>Donor Profile</h1>\\n        <div class=\\\"profileGroup\\\">\\n            <mat-form-field>\\n            <input matInput placeholder=\\\"First Name\\\"  type=\\\"text\\\" formControlName=\\\"donor_fname\\\" class=\\\"profileForm\\\" />\\n          </mat-form-field>\\n        </div>\\n        <div class=\\\"profileForm\\\">\\n            <mat-form-field>\\n            <input matInput placeholder=\\\"Last Name\\\" type=\\\"text\\\" formControlName=\\\"donor_lname\\\" class=\\\"profileForm\\\" />\\n          </mat-form-field>\\n        </div>\\n        <div class=\\\"profileForm\\\"> \\n        <mat-form-field class=\\\"donor-signup-component\\\">\\n          <input matInput placeholder=\\\"Username\\\" type=\\\"text\\\" formControlName=\\\"donor_username\\\" class=\\\"profileForm\\\"  >\\n        </mat-form-field>\\n        </div>\\n  \\n        <div class=\\\"profileForm\\\">\\n          <mat-form-field class=\\\"donor-signup-component\\\">\\n            <input matInput placeholder=\\\"Email\\\" formControlName=\\\"donor_email\\\" class=\\\"profileForm\\\"  />\\n          </mat-form-field>\\n        </div>\\n      \\n        <div class=\\\"profileForm\\\">\\n          <mat-form-field class=\\\"donor-signup-component\\\">\\n            <input matInput placeholder=\\\"Password\\\" formControlName=\\\"donor_password\\\" class=\\\"profileForm\\\" />\\n          </mat-form-field>\\n        </div>  \\n        <div class=\\\"profileForm\\\">\\n            <mat-form-field>\\n            <input matInput placeholder=\\\"Address\\\"  type=\\\"text\\\" formControlName=\\\"donor_address\\\" class=\\\"profileForm\\\" />\\n          </mat-form-field>\\n          </div>\\n          <div class=\\\"profileForm\\\">\\n              <mat-form-field>\\n              <input matInput placeholder=\\\"City\\\"  type=\\\"text\\\" formControlName=\\\"donor_city\\\" class=\\\"profileForm\\\" />\\n            </mat-form-field>\\n            </div>\\n            <div class=\\\"profileForm\\\">\\n                <mat-form-field>\\n                <input matInput placeholder=\\\"State\\\"  type=\\\"text\\\" formControlName=\\\"donor_state\\\" class=\\\"profileForm\\\" />\\n              </mat-form-field>\\n              </div>\\n      \\n              <div class=\\\"profileForm\\\">\\n                  <mat-form-field>\\n                  <input matInput placeholder=\\\"ZipCode\\\"  type=\\\"text\\\" formControlName=\\\"donor_zipcode\\\" class=\\\"profileForm\\\" />\\n                </mat-form-field>\\n                </div>\\n                <div class=\\\"profileForm\\\">\\n                    <mat-form-field>\\n                    <input matInput placeholder=\\\"Phone Number\\\"  type=\\\"text\\\" formControlName=\\\"donor_phonenumber\\\" class=\\\"profileForm\\\" />\\n                  </mat-form-field> \\n                  </div>\\n      </form>\\n      \\n      <div class=\\\"matButton-signup-card-signup\\\">\\n        <button mat-raised-button [disabled]=\\\"loading\\\" class=\\\"submit\\\" (click)=onSubmit()>Update</button>\\n      </div>\\n    </mat-card>\\n  </div>\\n  </div>\\n\\n \"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, FormControlName, Validators,} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport{DonorProfileService} from './donor-profile.service';\nimport { first } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-donor-profile',\n  templateUrl: './donor-profile.component.html',\n  styleUrls: ['./donor-profile.component.css']\n})\nexport class DonorProfileComponent implements OnInit {\n  profileGroup: FormGroup;\n  loading = false;\n    submitted = false;\n\n  constructor(private formBuilder: FormBuilder,private router: Router, private donorProfileservice: DonorProfileService, private FormControlName: FormControlName) { }\n\n  ngOnInit() {\n    \n    // this.profileGroup = this.formBuilder.group({\n    //   donor_fname: [''],\n    //   donor_email: [''],\n    //   donor_lname: [''],\n    //   donor_username: [''],\n    //   donor_password: [''],\n    //   donor_address: [''],\n    //   donor_city: [''],\n    //   donor_state: [''],\n    //   donor_zipCode: [''],\n    //   donor_phoneNumber: [''],\n\n    // });\n    this.profileGroup = new FormGroup({\n      donor_fname:FormControlName['donor_fname']\n   });\n    \n  }\n// convenience getter for easy access to form fields\nget f() { return this.profileGroup.controls; }\n\n\nonSubmit() {\n  this.submitted = true;\n\n  // stop here if form is invalid\n  if (this.profileGroup.invalid) {\n      return;\n  }\n\n  this.loading = true;\n  this.donorProfileservice.updateDonor(this.profileGroup.value)\n      .pipe(first())\n      .subscribe(\n          data => {\n              // this.alertService.success('Registration successful', true);\n              console.log(data);\n              this.router.navigate(['/donorlogin']);\n          },\n          error => {\n              // this.alertService.error(error);\n              this.loading = false;\n          });\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport {Donor} from \"./donor-profile\";\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport {APIURL} from '../../../environments/environment.prod'\n\n\n@Injectable()\nexport class DonorProfileService {\n  constructor(private http: HttpClient) { }\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': 'currentUser'\n    })\n  };\n  baseUrl: string = 'http://localhost:3000/donor';\n\n  getDonors() {\n    return this.http.get<Donor[]>(this.baseUrl);\n  }\n\n  getDonorById(id: number): Observable<Donor>{\n    return this.http.get<Donor>(`{APIURL}/donation/editdonor`, this.httpOptions);\n  }\n\n  updateDonor(donor: Donor): Observable<Donor> {\n    return this.http.put<Donor>(`{APIURL}/donation/editdonor`, this.httpOptions)\n  }\n  deleteDonor(id: number) {\n    return this.http.delete(`{APIURL}/donation/editdonor`, this.httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError,  tap } from 'rxjs/operators';\nimport { map } from 'rxjs/operators';\nimport { APIURL } from '../../environments/environment.prod'\n\n@Injectable()\nexport class DonorAuthService {\n    url = 'http://localhost:3000'\n\n\n  constructor(private http: HttpClient) { }\n\n  login(donor_username: string, donor_password: string) {\n    return this.http.post<any>(`${APIURL}/donor/login`, {donor_username: donor_username, donor_password: donor_password })\n    \n}\n\nlogout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n}\n}\n","import { Injectable } from '@angular/core';\nimport { Donor } from '../auth/donor-signup/donor';\nimport { Donation } from '../donor-dashboard/donor-dashboard.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DonorStateServiceService {\n\n  constructor() { }\n  donor: Donor;\n}\n","module.exports = \".about {\\n    margin-top: 5em;\\n    margin-bottom: 5em;\\n}\\n\\nh1, h2 {\\n    text-align: center;\\n}\\n\\nimg {\\n    margin-left: 36em;\\n    width: 15%;\\n    height: 15%;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"about\\\">\\n    <h1>About Sunshine's Bundles of Joy</h1>\\n    <h3>Before Sunshine’s Bundles of Joy was established Annika Hudson started a group on Facebook called the Ladies place. She\\n      was motivated to start a Baby Bag Drive because of her personal experience with having a baby. The first Baby Bag Drive\\n      was a success and we decided to make this an annual event. I wanted to continue this awesome ideal. Sunshine’s Bundles\\n      of Joy was established in 2016. On March 29th, 2017 the organization became a non-profit. Helping others\\n      and making a difference in someone’s life brings me joy.</h3>\\n\\n    <h2>About Me</h2>\\n    <img src=\\\"../../../assets/IMG-0615.jpeg\\\">\\n    <h3>I am a mother of one and being a parent was the best gift I was ever given. Seeing happiness on the parents faces when\\n      I am able to provide them with baby items is a blessing.</h3>\\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".contactForm {\\n    margin-top: 5em;\\n    text-align: center;\\n    margin-bottom: 5em;\\n}\\n\\ntextarea {\\n    background-color: whitesmoke;\\n    height: 18em;\\n}\\n\\n.messageEntry {\\n    width: 50%;\\n}\\n\\nbutton {\\n    color: black;\\n    background-color: #ff8cff;\\n}\\n\\nbutton:hover {\\n    background-color: white;\\n    border: solid 1px #ff8cff;\\n}\"","module.exports = \"<div class=\\\"contactForm\\\">\\n  <h2>Contact</h2>  \\n\\n  <form (submit)=\\\"onSubmit();\\\" method=\\\"POST\\\" action=\\\"https://formspree.io/ieshaduff@yahoo.com\\\">\\n    <div class=\\\"infoFields\\\">\\n      <mat-form-field>\\n        <input matInput type=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Your name\\\">\\n      </mat-form-field>\\n      <br>\\n      <mat-form-field>\\n        <input matInput type=\\\"phone\\\" name=\\\"phone\\\" placeholder=\\\"Your phone number\\\">\\n      </mat-form-field>\\n      <br>\\n      <mat-form-field class=\\\"emailField\\\">\\n        <input matInput type=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Your email\\\">\\n      </mat-form-field>\\n    </div>\\n    <br>\\n    <mat-form-field class=\\\"messageEntry\\\" appearance=\\\"outline\\\">\\n      <textarea matInput name=\\\"message\\\" placeholder=\\\"Your message\\\"></textarea>\\n    </mat-form-field>\\n    <br>\\n    <button mat-raised-button type=\\\"submit\\\">Send</button>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MatFormFieldModule } from \"@angular/material\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".navbar {\\n    background-color: #7cd9d9;\\n    position: fixed;\\n    bottom: 0;\\n    right: 0;\\n    left: 0;\\n    width: 100%;\\n    z-index: 1;\\n}\\n\\n.flexSpaceFill {\\n    flex: 1 1 auto;\\n}\\n\\n.cRight {\\n    margin: auto 33%;\\n}\\n\\na, img {\\n    width: 42px;\\n    height: 42px\\n}\"","module.exports = \"<mat-toolbar class=\\\"navbar\\\">\\n  <span class=\\\"cRight\\\">© Copyright Sunshine's Bundles of Joy 2018</span>\\n  <span class=\\\"flexSpaceFill\\\"></span>\\n  <a href=\\\"https://www.facebook.com/Sunshines-Bundles-of-Joy-1929731860627820/\\\" target=\\\"blank\\\">\\n    <img src=\\\"../../../assets/f-ogo_RGB_HEX-58.png\\\" alt=\\\"facebook\\\">\\n  </a>\\n</mat-toolbar>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<ng-content></ng-content>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".navbar {\\n    background-color: #7cd9d9;\\n    position: fixed;\\n    top: 0;\\n    right: 0;\\n    width: 100%;\\n    z-index: 2;\\n}\\n\\n.spaceFill {\\n    flex: 1 1 auto;\\n}\\n\\n.navButton {\\n    background: #7cd9d9;\\n    border-top: none;\\n    border-bottom: none;\\n    height: 100%;\\n}\\n\\n#m1btn {\\n    border-left: none;\\n    border-right: none;\\n}\\n\\n#m2btn {\\n    border-right: none;\\n}\\n\\na {\\n    color: black;\\n    text-decoration: none;\\n}\"","module.exports = \"<mat-toolbar class=\\\"navbar\\\">\\n  <a routerLink=\\\"\\\">\\n    <h3>Sunshine's Bundles of Joy</h3>\\n  </a>\\n  <span class=\\\"spaceFill\\\"></span>\\n  <button mat-stroked-button class=\\\"navButton\\\" routerLink=\\\"/about\\\">About</button>\\n  <button mat-stroked-button class=\\\"navButton\\\" id=\\\"m1btn\\\" routerLink=\\\"/contact\\\">Contact</button>\\n  <button mat-stroked-button class=\\\"navButton\\\" id=\\\"m2btn\\\" routerLink=\\\"/donordashboard\\\">Dashboard </button>\\n  <button mat-stroked-button class=\\\"navButton\\\"  [routerLink]=\\\"['/donorlogin']\\\">Logout</button>\\n</mat-toolbar>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"h2 {\\n    margin-top: 4em;\\n    margin-bottom: 0;\\n    text-align: center;\\n}\\n\\np {\\n    margin-top: 0;\\n    text-align: center;\\n}\\n\\n.choices {\\n    margin: auto;\\n    width: 25%;\\n    background-color: whitesmoke;\\n    height: 3em;\\n}\\n\\n.itemField {\\n    text-align: center;\\n}\\n\\n.amountField {\\n    margin-top: 3em;\\n    background-color: whitesmoke;\\n    height: 3em;\\n    text-align: center\\n}\\n\\n.addButton {\\n    background-color: #ff8cff;\\n    margin-left: 68%;\\n    color: #191919;\\n}\\n\\n.cdk-column-quantity {\\n    width: 25%;\\n}\\n\\nmat-sidenav-container {\\n    height: 90.5%;\\n}\\n\\nmat-sidenav {\\n    width: 20em;\\n}\\n\\n.reqButton {\\n    background-color: #ff8cff;\\n    color: #191919;\\n    height: 15%;\\n}\\n\\n.eButton {\\n    background-color: rgb(122, 202, 122);\\n}\\n\\n.dButton {\\n    background-color: rgb(255, 148, 148);\\n}\"","module.exports = \"<mat-sidenav-container>\\n  <mat-sidenav #drawer\\n  class=\\\"sidenav\\\"\\n  [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n  [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n  [opened]=\\\"!(isHandset$ | async)\\\">\\n    <h2>Requested donations</h2>\\n    \\n    <div>\\n      <table class=\\\"sideTable\\\" #sideTable mat-table [dataSource]=\\\"basketDataSource\\\">\\n        \\n        <ng-container matColumnDef=\\\"select\\\">\\n          <th mat-header-cell *matHeaderCellDef></th>\\n          <mat-checkbox></mat-checkbox>\\n          <td mat-cell *matCellDef=\\\"let row\\\">\\n            <mat-checkbox (click)=\\\"$event.stopPropagation()\\\" (change)=\\\"$event ? selection.toggle(row) : null\\\">\\n            </mat-checkbox>\\n          </td>\\n        </ng-container>\\n        \\n        <ng-container matColumnDef=\\\"name\\\">\\n          <th mat-header-cell *matHeaderCellDef>Item</th>\\n          <td mat-cell *matCellDef=\\\"let basket\\\">{{basket.name}}</td>\\n        </ng-container>\\n        \\n        <ng-container matColumnDef=\\\"quantity\\\">\\n          <th mat-header-cell *matHeaderCellDef>Quantity</th>\\n          <td mat-cell *matCellDef=\\\"let basket\\\">{{basket.quantity}}</td>\\n        </ng-container>\\n        \\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      </table>\\n    </div>\\n    <div class=\\\"sideButtons\\\">\\n      <button class=\\\"eButton\\\" mat-raised-button>Edit</button>\\n      <button class=\\\"dButton\\\" mat-raised-button>Del</button>\\n      <button class=\\\"reqButton\\\" mat-raised-button>Send request</button>\\n    </div>\\n\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <h2>Donated Items</h2>\\n    <p>Please note all items are subject to availability</p>\\n      \\n      <div class=\\\"choices\\\">\\n        <mat-select class=\\\"itemField\\\" placeholder=\\\"Item(s)\\\">\\n          <mat-option *ngFor=\\\"let request of requests\\\" [(value)]=\\\"requestedItem\\\">{{request.viewValue}}</mat-option>\\n        </mat-select>\\n        <mat-select class=\\\"amountField\\\" placeholder=\\\"Quantity\\\">\\n          <mat-option *ngFor=\\\"let amount of amounts\\\" [(value)]=\\\"requestedAmount\\\">{{amount.value}}</mat-option>\\n        </mat-select> \\n      </div>\\n      \\n      <div class=\\\"button\\\">\\n        <button class=\\\"addButton\\\" mat-raised-button (click)=\\\"testFunction()\\\">Add items</button>\\n      </div>\\n      \\n  </mat-sidenav-content>\\n</mat-sidenav-container>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatTableDataSource, MatSelectModule, MatFormFieldModule, MatTableModule, MatSidenavModule, MatTable } from '@angular/material';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ReactiveFormsModule, FormsModule, FormBuilder, FormGroup } from \"@angular/forms\";\nimport { JsonPipe } from '../../../node_modules/@angular/common';\n\n\nexport interface Request {\n  value: string;\n  viewValue: string;\n}\n\nexport interface Amount {\n  value: number;\n  viewValue: number;\n}\n\nexport interface BasketInventory {\n  name: string;\n  quantity: number;\n}\n\n// const DONATIONDATA: DonationsList[] = [\n//   {name: \"Clothes (outfits)\", quantity: 4},\n//   {name: \"Shoes\", quantity: 1},\n//   {name: \"Baby food (jars)\", quantity: 9},\n//   {name: \"Diaper Bags\", quantity: 1},\n//   {name: \"Bottles\", quantity: 5},\n//   {name: \"Pacifiers\", quantity: 3},\n//   {name: \"Diapers (box)\", quantity: 0},\n//   {name: \"Bed\", quantity: 0},\n// ]\n\nconst BASKETDATA: BasketInventory[] = []\n\n\n@Component({\n  selector: 'app-user-dashboard',\n  templateUrl: './user-dashboard.component.html',\n  styleUrls: ['./user-dashboard.component.css']\n})\nexport class UserDashboardComponent implements OnInit {\n  displayedColumns: string[] = [\"select\", \"name\", \"quantity\"];\n  // dataSource = new MatTableDataSource<DonationsList>(DONATIONDATA)\n  basketDataSource = new MatTableDataSource<BasketInventory>(BASKETDATA)\n  selection = new SelectionModel<Request>(true, []);\n  options: FormGroup;\n\n  @ViewChild(MatTable) table: MatTable<any>;\n\n  // isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n  //   .pipe(\n  //     map(result => result.matches)\n  //   );\n  //   selectedValue: string;\n  requests: Request[] = [\n    {value: 'used_clothing', viewValue: 'Clothes (outfit)'},\n    {value: 'used_shoes', viewValue: 'Shoes'},\n    {value: 'baby_food', viewValue: 'Baby Food (jar)'},\n    {value: 'diaper_bags', viewValue: 'Diaper Bags'},\n    {value: 'bottles', viewValue: 'Bottles'},\n    {value: 'pacifiers', viewValue: 'Pacifiers'},\n    {value: 'diapers_boxes', viewValue: 'Diapers (box)'},\n    {value: 'beds', viewValue: 'Bed'},\n  ];\n\n  amounts: Amount[] = [\n    {value: 1, viewValue: 1},\n    {value: 2, viewValue: 2},\n    {value: 3, viewValue: 3},\n    {value: 4, viewValue: 4},\n    {value: 5, viewValue: 5},\n    {value: 6, viewValue: 6},\n    {value: 7, viewValue: 7},\n    {value: 8, viewValue: 8},\n    {value: 9, viewValue: 9},\n    {value: 10, viewValue: 10}\n\n  ];\n\n  testFunction(){\n    // console.log(this.selection.selected)\n    this.basketDataSource.data.push();\n    this.table.renderRows();\n    }\n\n  constructor(/*private breakpointObserver: BreakpointObserver*/) { }\n\n  ngOnInit() {\n  }\n\n\n  \n\n}\n","export const environment = {\n  production: true\n};\n\nexport let APIURL = \"\"\n// export let APIURL = '//localhost:3000';\n\nswitch (window.location.hostname) {\n    // this is the deployed angular application\n    case 'icd-bundleclient.herokuapp.com':\n        // this is the full url of your deployed API\n        APIURL = 'https://icd-bundleapi.herokuapp.com/'\n        break;\n    default:\n        // this is the local host name of your API\n        APIURL = 'http://localhost:3000';\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs'; \n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}